// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: map.proto
// Protobuf C++ Version: 6.31.1

#include "map.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tibia {
namespace protobuf {
namespace map {

inline constexpr Npc::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tile_coordinate_{nullptr},
        subarea_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Npc::Npc(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Npc_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NpcDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NpcDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NpcDefaultTypeInternal() {}
  union {
    Npc _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NpcDefaultTypeInternal _Npc_default_instance_;

inline constexpr MapFile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        file_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        top_left_coordinate_{nullptr},
        file_type_{static_cast< ::tibia::protobuf::map::MAP_FILE_TYPE >(0)},
        fields_width_{0u},
        fields_height_{0u},
        area_id_{0u},
        scale_factor_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MapFile::MapFile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MapFile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapFileDefaultTypeInternal() {}
  union {
    MapFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapFileDefaultTypeInternal _MapFile_default_instance_;

inline constexpr Area::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subarea_ids_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_coordinate_{nullptr},
        area_id_{0u},
        area_type_{static_cast< ::tibia::protobuf::map::AREA_TYPE >(0)},
        reject_donations_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Area::Area(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Area_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AreaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AreaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AreaDefaultTypeInternal() {}
  union {
    Area _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AreaDefaultTypeInternal _Area_default_instance_;

inline constexpr Map::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        areas_{},
        npcs_{},
        resource_files_{},
        top_left_tile_coordinate_{nullptr},
        bottom_right_tile_coordinate_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Map::Map(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Map_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapDefaultTypeInternal() {}
  union {
    Map _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapDefaultTypeInternal _Map_default_instance_;
}  // namespace map
}  // namespace protobuf
}  // namespace tibia
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_map_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_map_2eproto = nullptr;
const ::uint32_t
    TableStruct_map_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Map, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Map, _impl_.areas_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Map, _impl_.npcs_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Map, _impl_.resource_files_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Map, _impl_.top_left_tile_coordinate_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Map, _impl_.bottom_right_tile_coordinate_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Area, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Area, _impl_.area_id_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Area, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Area, _impl_.area_type_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Area, _impl_.subarea_ids_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Area, _impl_.label_coordinate_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Area, _impl_.reject_donations_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Area, _impl_.alias_),
        3,
        0,
        4,
        ~0u,
        2,
        5,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Npc, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Npc, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Npc, _impl_.tile_coordinate_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::Npc, _impl_.subarea_id_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::MapFile, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::MapFile, _impl_.file_type_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::MapFile, _impl_.top_left_coordinate_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::MapFile, _impl_.file_name_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::MapFile, _impl_.fields_width_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::MapFile, _impl_.fields_height_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::MapFile, _impl_.area_id_),
        PROTOBUF_FIELD_OFFSET(::tibia::protobuf::map::MapFile, _impl_.scale_factor_),
        2,
        1,
        0,
        3,
        4,
        5,
        6,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::tibia::protobuf::map::Map)},
        {13, sizeof(::tibia::protobuf::map::Area)},
        {30, sizeof(::tibia::protobuf::map::Npc)},
        {39, sizeof(::tibia::protobuf::map::MapFile)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::tibia::protobuf::map::_Map_default_instance_._instance,
    &::tibia::protobuf::map::_Area_default_instance_._instance,
    &::tibia::protobuf::map::_Npc_default_instance_._instance,
    &::tibia::protobuf::map::_MapFile_default_instance_._instance,
};
const char descriptor_table_protodef_map_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\tmap.proto\022\022tibia.protobuf.map\032\014shared."
    "proto\"\230\002\n\003Map\022\'\n\005areas\030\001 \003(\0132\030.tibia.pro"
    "tobuf.map.Area\022%\n\004npcs\030\002 \003(\0132\027.tibia.pro"
    "tobuf.map.Npc\0223\n\016resource_files\030\003 \003(\0132\033."
    "tibia.protobuf.map.MapFile\022C\n\030top_left_t"
    "ile_coordinate\030\004 \001(\0132!.tibia.protobuf.sh"
    "ared.Coordinate\022G\n\034bottom_right_tile_coo"
    "rdinate\030\005 \001(\0132!.tibia.protobuf.shared.Co"
    "ordinate\"\322\001\n\004Area\022\017\n\007area_id\030\001 \001(\r\022\014\n\004na"
    "me\030\002 \001(\t\0220\n\tarea_type\030\003 \001(\0162\035.tibia.prot"
    "obuf.map.AREA_TYPE\022\023\n\013subarea_ids\030\004 \003(\r\022"
    ";\n\020label_coordinate\030\005 \001(\0132!.tibia.protob"
    "uf.shared.Coordinate\022\030\n\020reject_donations"
    "\030\006 \001(\010\022\r\n\005alias\030\007 \001(\t\"c\n\003Npc\022\014\n\004name\030\001 \001"
    "(\t\022:\n\017tile_coordinate\030\002 \001(\0132!.tibia.prot"
    "obuf.shared.Coordinate\022\022\n\nsubarea_id\030\003 \001"
    "(\r\"\346\001\n\007MapFile\0224\n\tfile_type\030\001 \001(\0162!.tibi"
    "a.protobuf.map.MAP_FILE_TYPE\022>\n\023top_left"
    "_coordinate\030\002 \001(\0132!.tibia.protobuf.share"
    "d.Coordinate\022\021\n\tfile_name\030\003 \001(\t\022\024\n\014field"
    "s_width\030\004 \001(\r\022\025\n\rfields_height\030\005 \001(\r\022\017\n\007"
    "area_id\030\006 \001(\r\022\024\n\014scale_factor\030\007 \001(\001*b\n\rM"
    "AP_FILE_TYPE\022\031\n\025MAP_FILE_TYPE_SUBAREA\020\000\022"
    "\033\n\027MAP_FILE_TYPE_SATELLITE\020\001\022\031\n\025MAP_FILE"
    "_TYPE_MINIMAP\020\002*J\n\tAREA_TYPE\022\022\n\016AREA_TYP"
    "E_NONE\020\000\022\022\n\016AREA_TYPE_AREA\020\001\022\025\n\021AREA_TYP"
    "E_SUBAREA\020\002"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_map_2eproto_deps[1] = {
        &::descriptor_table_shared_2eproto,
};
static ::absl::once_flag descriptor_table_map_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_map_2eproto = {
    false,
    false,
    1051,
    descriptor_table_protodef_map_2eproto,
    "map.proto",
    &descriptor_table_map_2eproto_once,
    descriptor_table_map_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_map_2eproto::offsets,
    file_level_enum_descriptors_map_2eproto,
    file_level_service_descriptors_map_2eproto,
};
namespace tibia {
namespace protobuf {
namespace map {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MAP_FILE_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_map_2eproto);
  return file_level_enum_descriptors_map_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MAP_FILE_TYPE_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AREA_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_map_2eproto);
  return file_level_enum_descriptors_map_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t AREA_TYPE_internal_data_[] = {
    196608u, 0u, };
// ===================================================================

class Map::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Map>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Map, _impl_._has_bits_);
};

void Map::clear_top_left_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.top_left_tile_coordinate_ != nullptr) _impl_.top_left_tile_coordinate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Map::clear_bottom_right_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bottom_right_tile_coordinate_ != nullptr) _impl_.bottom_right_tile_coordinate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Map::Map(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Map_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tibia.protobuf.map.Map)
}
PROTOBUF_NDEBUG_INLINE Map::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tibia::protobuf::map::Map& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        areas_{visibility, arena, from.areas_},
        npcs_{visibility, arena, from.npcs_},
        resource_files_{visibility, arena, from.resource_files_} {}

Map::Map(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Map& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Map_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Map* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.top_left_tile_coordinate_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.top_left_tile_coordinate_)
                : nullptr;
  _impl_.bottom_right_tile_coordinate_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bottom_right_tile_coordinate_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tibia.protobuf.map.Map)
}
PROTOBUF_NDEBUG_INLINE Map::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        areas_{visibility, arena},
        npcs_{visibility, arena},
        resource_files_{visibility, arena} {}

inline void Map::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, top_left_tile_coordinate_),
           0,
           offsetof(Impl_, bottom_right_tile_coordinate_) -
               offsetof(Impl_, top_left_tile_coordinate_) +
               sizeof(Impl_::bottom_right_tile_coordinate_));
}
Map::~Map() {
  // @@protoc_insertion_point(destructor:tibia.protobuf.map.Map)
  SharedDtor(*this);
}
inline void Map::SharedDtor(MessageLite& self) {
  Map& this_ = static_cast<Map&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.top_left_tile_coordinate_;
  delete this_._impl_.bottom_right_tile_coordinate_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Map::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Map(arena);
}
constexpr auto Map::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Map, _impl_.areas_) +
          decltype(Map::_impl_.areas_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Map, _impl_.npcs_) +
          decltype(Map::_impl_.npcs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Map, _impl_.resource_files_) +
          decltype(Map::_impl_.resource_files_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Map), alignof(Map), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Map::PlacementNew_,
                                 sizeof(Map),
                                 alignof(Map));
  }
}
constexpr auto Map::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Map_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Map::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Map>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Map::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Map>(), &Map::ByteSizeLong,
              &Map::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Map, _impl_._cached_size_),
          false,
      },
      &Map::kDescriptorMethods,
      &descriptor_table_map_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Map_class_data_ =
        Map::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Map::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Map_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Map_class_data_.tc_table);
  return Map_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2>
Map::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Map, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Map_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tibia::protobuf::map::Map>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .tibia.protobuf.map.Area areas = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Map, _impl_.areas_)}},
    // repeated .tibia.protobuf.map.Npc npcs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Map, _impl_.npcs_)}},
    // repeated .tibia.protobuf.map.MapFile resource_files = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Map, _impl_.resource_files_)}},
    // optional .tibia.protobuf.shared.Coordinate top_left_tile_coordinate = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 3, PROTOBUF_FIELD_OFFSET(Map, _impl_.top_left_tile_coordinate_)}},
    // optional .tibia.protobuf.shared.Coordinate bottom_right_tile_coordinate = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 4, PROTOBUF_FIELD_OFFSET(Map, _impl_.bottom_right_tile_coordinate_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tibia.protobuf.map.Area areas = 1;
    {PROTOBUF_FIELD_OFFSET(Map, _impl_.areas_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tibia.protobuf.map.Npc npcs = 2;
    {PROTOBUF_FIELD_OFFSET(Map, _impl_.npcs_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tibia.protobuf.map.MapFile resource_files = 3;
    {PROTOBUF_FIELD_OFFSET(Map, _impl_.resource_files_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tibia.protobuf.shared.Coordinate top_left_tile_coordinate = 4;
    {PROTOBUF_FIELD_OFFSET(Map, _impl_.top_left_tile_coordinate_), _Internal::kHasBitsOffset + 0, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tibia.protobuf.shared.Coordinate bottom_right_tile_coordinate = 5;
    {PROTOBUF_FIELD_OFFSET(Map, _impl_.bottom_right_tile_coordinate_), _Internal::kHasBitsOffset + 1, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tibia::protobuf::map::Area>()},
      {::_pbi::TcParser::GetTable<::tibia::protobuf::map::Npc>()},
      {::_pbi::TcParser::GetTable<::tibia::protobuf::map::MapFile>()},
      {::_pbi::TcParser::GetTable<::tibia::protobuf::shared::Coordinate>()},
      {::_pbi::TcParser::GetTable<::tibia::protobuf::shared::Coordinate>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Map::Clear() {
// @@protoc_insertion_point(message_clear_start:tibia.protobuf.map.Map)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.areas_.Clear();
  _impl_.npcs_.Clear();
  _impl_.resource_files_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.top_left_tile_coordinate_ != nullptr);
      _impl_.top_left_tile_coordinate_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.bottom_right_tile_coordinate_ != nullptr);
      _impl_.bottom_right_tile_coordinate_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Map::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Map& this_ = static_cast<const Map&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Map::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Map& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tibia.protobuf.map.Map)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tibia.protobuf.map.Area areas = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_areas_size());
       i < n; i++) {
    const auto& repfield = this_._internal_areas().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .tibia.protobuf.map.Npc npcs = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_npcs_size());
       i < n; i++) {
    const auto& repfield = this_._internal_npcs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .tibia.protobuf.map.MapFile resource_files = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_resource_files_size());
       i < n; i++) {
    const auto& repfield = this_._internal_resource_files().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .tibia.protobuf.shared.Coordinate top_left_tile_coordinate = 4;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.top_left_tile_coordinate_, this_._impl_.top_left_tile_coordinate_->GetCachedSize(), target,
        stream);
  }

  // optional .tibia.protobuf.shared.Coordinate bottom_right_tile_coordinate = 5;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.bottom_right_tile_coordinate_, this_._impl_.bottom_right_tile_coordinate_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tibia.protobuf.map.Map)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Map::ByteSizeLong(const MessageLite& base) {
  const Map& this_ = static_cast<const Map&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Map::ByteSizeLong() const {
  const Map& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tibia.protobuf.map.Map)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .tibia.protobuf.map.Area areas = 1;
    {
      total_size += 1UL * this_._internal_areas_size();
      for (const auto& msg : this_._internal_areas()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .tibia.protobuf.map.Npc npcs = 2;
    {
      total_size += 1UL * this_._internal_npcs_size();
      for (const auto& msg : this_._internal_npcs()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .tibia.protobuf.map.MapFile resource_files = 3;
    {
      total_size += 1UL * this_._internal_resource_files_size();
      for (const auto& msg : this_._internal_resource_files()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .tibia.protobuf.shared.Coordinate top_left_tile_coordinate = 4;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.top_left_tile_coordinate_);
    }
    // optional .tibia.protobuf.shared.Coordinate bottom_right_tile_coordinate = 5;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bottom_right_tile_coordinate_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Map::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Map*>(&to_msg);
  auto& from = static_cast<const Map&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tibia.protobuf.map.Map)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_areas()->MergeFrom(
      from._internal_areas());
  _this->_internal_mutable_npcs()->MergeFrom(
      from._internal_npcs());
  _this->_internal_mutable_resource_files()->MergeFrom(
      from._internal_resource_files());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.top_left_tile_coordinate_ != nullptr);
      if (_this->_impl_.top_left_tile_coordinate_ == nullptr) {
        _this->_impl_.top_left_tile_coordinate_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.top_left_tile_coordinate_);
      } else {
        _this->_impl_.top_left_tile_coordinate_->MergeFrom(*from._impl_.top_left_tile_coordinate_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.bottom_right_tile_coordinate_ != nullptr);
      if (_this->_impl_.bottom_right_tile_coordinate_ == nullptr) {
        _this->_impl_.bottom_right_tile_coordinate_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bottom_right_tile_coordinate_);
      } else {
        _this->_impl_.bottom_right_tile_coordinate_->MergeFrom(*from._impl_.bottom_right_tile_coordinate_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Map::CopyFrom(const Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tibia.protobuf.map.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Map::InternalSwap(Map* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.areas_.InternalSwap(&other->_impl_.areas_);
  _impl_.npcs_.InternalSwap(&other->_impl_.npcs_);
  _impl_.resource_files_.InternalSwap(&other->_impl_.resource_files_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Map, _impl_.bottom_right_tile_coordinate_)
      + sizeof(Map::_impl_.bottom_right_tile_coordinate_)
      - PROTOBUF_FIELD_OFFSET(Map, _impl_.top_left_tile_coordinate_)>(
          reinterpret_cast<char*>(&_impl_.top_left_tile_coordinate_),
          reinterpret_cast<char*>(&other->_impl_.top_left_tile_coordinate_));
}

::google::protobuf::Metadata Map::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Area::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Area>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Area, _impl_._has_bits_);
};

void Area::clear_label_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.label_coordinate_ != nullptr) _impl_.label_coordinate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Area::Area(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Area_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tibia.protobuf.map.Area)
}
PROTOBUF_NDEBUG_INLINE Area::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tibia::protobuf::map::Area& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subarea_ids_{visibility, arena, from.subarea_ids_},
        name_(arena, from.name_),
        alias_(arena, from.alias_) {}

Area::Area(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Area& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Area_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Area* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.label_coordinate_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.label_coordinate_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, area_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, area_id_),
           offsetof(Impl_, reject_donations_) -
               offsetof(Impl_, area_id_) +
               sizeof(Impl_::reject_donations_));

  // @@protoc_insertion_point(copy_constructor:tibia.protobuf.map.Area)
}
PROTOBUF_NDEBUG_INLINE Area::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        subarea_ids_{visibility, arena},
        name_(arena),
        alias_(arena) {}

inline void Area::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, label_coordinate_),
           0,
           offsetof(Impl_, reject_donations_) -
               offsetof(Impl_, label_coordinate_) +
               sizeof(Impl_::reject_donations_));
}
Area::~Area() {
  // @@protoc_insertion_point(destructor:tibia.protobuf.map.Area)
  SharedDtor(*this);
}
inline void Area::SharedDtor(MessageLite& self) {
  Area& this_ = static_cast<Area&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.alias_.Destroy();
  delete this_._impl_.label_coordinate_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Area::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Area(arena);
}
constexpr auto Area::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Area, _impl_.subarea_ids_) +
          decltype(Area::_impl_.subarea_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Area), alignof(Area), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Area::PlacementNew_,
                                 sizeof(Area),
                                 alignof(Area));
  }
}
constexpr auto Area::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Area_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Area::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Area>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Area::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Area>(), &Area::ByteSizeLong,
              &Area::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Area, _impl_._cached_size_),
          false,
      },
      &Area::kDescriptorMethods,
      &descriptor_table_map_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Area_class_data_ =
        Area::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Area::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Area_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Area_class_data_.tc_table);
  return Area_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 41, 2>
Area::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Area, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Area_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tibia::protobuf::map::Area>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 area_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Area, _impl_.area_id_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(Area, _impl_.area_id_)}},
    // optional string name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Area, _impl_.name_)}},
    // optional .tibia.protobuf.map.AREA_TYPE area_type = 3;
    {::_pbi::TcParser::FastEr0S1,
     {24, 4, 2, PROTOBUF_FIELD_OFFSET(Area, _impl_.area_type_)}},
    // repeated uint32 subarea_ids = 4;
    {::_pbi::TcParser::FastV32R1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Area, _impl_.subarea_ids_)}},
    // optional .tibia.protobuf.shared.Coordinate label_coordinate = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(Area, _impl_.label_coordinate_)}},
    // optional bool reject_donations = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Area, _impl_.reject_donations_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(Area, _impl_.reject_donations_)}},
    // optional string alias = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(Area, _impl_.alias_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 area_id = 1;
    {PROTOBUF_FIELD_OFFSET(Area, _impl_.area_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(Area, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .tibia.protobuf.map.AREA_TYPE area_type = 3;
    {PROTOBUF_FIELD_OFFSET(Area, _impl_.area_type_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated uint32 subarea_ids = 4;
    {PROTOBUF_FIELD_OFFSET(Area, _impl_.subarea_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional .tibia.protobuf.shared.Coordinate label_coordinate = 5;
    {PROTOBUF_FIELD_OFFSET(Area, _impl_.label_coordinate_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool reject_donations = 6;
    {PROTOBUF_FIELD_OFFSET(Area, _impl_.reject_donations_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string alias = 7;
    {PROTOBUF_FIELD_OFFSET(Area, _impl_.alias_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tibia::protobuf::shared::Coordinate>()},
      {0, 2},
  }},
  {{
    "\27\0\4\0\0\0\0\5"
    "tibia.protobuf.map.Area"
    "name"
    "alias"
  }},
};
PROTOBUF_NOINLINE void Area::Clear() {
// @@protoc_insertion_point(message_clear_start:tibia.protobuf.map.Area)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subarea_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.alias_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.label_coordinate_ != nullptr);
      _impl_.label_coordinate_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000038u) != 0) {
    ::memset(&_impl_.area_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.reject_donations_) -
        reinterpret_cast<char*>(&_impl_.area_id_)) + sizeof(_impl_.reject_donations_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Area::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Area& this_ = static_cast<const Area&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Area::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Area& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tibia.protobuf.map.Area)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 area_id = 1;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_area_id(), target);
  }

  // optional string name = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tibia.protobuf.map.Area.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .tibia.protobuf.map.AREA_TYPE area_type = 3;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this_._internal_area_type(), target);
  }

  // repeated uint32 subarea_ids = 4;
  for (int i = 0, n = this_._internal_subarea_ids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_subarea_ids().Get(i), target);
  }

  // optional .tibia.protobuf.shared.Coordinate label_coordinate = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.label_coordinate_, this_._impl_.label_coordinate_->GetCachedSize(), target,
        stream);
  }

  // optional bool reject_donations = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this_._internal_reject_donations(), target);
  }

  // optional string alias = 7;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_alias();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tibia.protobuf.map.Area.alias");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tibia.protobuf.map.Area)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Area::ByteSizeLong(const MessageLite& base) {
  const Area& this_ = static_cast<const Area&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Area::ByteSizeLong() const {
  const Area& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tibia.protobuf.map.Area)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 subarea_ids = 4;
    {
      ::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_subarea_ids());
      ::size_t tag_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_subarea_ids_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000020u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // optional string name = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional string alias = 7;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_alias());
    }
    // optional .tibia.protobuf.shared.Coordinate label_coordinate = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.label_coordinate_);
    }
    // optional uint32 area_id = 1;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_area_id());
    }
    // optional .tibia.protobuf.map.AREA_TYPE area_type = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_area_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Area::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Area*>(&to_msg);
  auto& from = static_cast<const Area&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tibia.protobuf.map.Area)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_subarea_ids()->MergeFrom(from._internal_subarea_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_alias(from._internal_alias());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.label_coordinate_ != nullptr);
      if (_this->_impl_.label_coordinate_ == nullptr) {
        _this->_impl_.label_coordinate_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.label_coordinate_);
      } else {
        _this->_impl_.label_coordinate_->MergeFrom(*from._impl_.label_coordinate_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.area_id_ = from._impl_.area_id_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.area_type_ = from._impl_.area_type_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.reject_donations_ = from._impl_.reject_donations_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Area::CopyFrom(const Area& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tibia.protobuf.map.Area)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Area::InternalSwap(Area* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.subarea_ids_.InternalSwap(&other->_impl_.subarea_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Area, _impl_.reject_donations_)
      + sizeof(Area::_impl_.reject_donations_)
      - PROTOBUF_FIELD_OFFSET(Area, _impl_.label_coordinate_)>(
          reinterpret_cast<char*>(&_impl_.label_coordinate_),
          reinterpret_cast<char*>(&other->_impl_.label_coordinate_));
}

::google::protobuf::Metadata Area::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Npc::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Npc>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Npc, _impl_._has_bits_);
};

void Npc::clear_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tile_coordinate_ != nullptr) _impl_.tile_coordinate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Npc::Npc(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Npc_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tibia.protobuf.map.Npc)
}
PROTOBUF_NDEBUG_INLINE Npc::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tibia::protobuf::map::Npc& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

Npc::Npc(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Npc& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Npc_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Npc* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tile_coordinate_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tile_coordinate_)
                : nullptr;
  _impl_.subarea_id_ = from._impl_.subarea_id_;

  // @@protoc_insertion_point(copy_constructor:tibia.protobuf.map.Npc)
}
PROTOBUF_NDEBUG_INLINE Npc::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void Npc::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tile_coordinate_),
           0,
           offsetof(Impl_, subarea_id_) -
               offsetof(Impl_, tile_coordinate_) +
               sizeof(Impl_::subarea_id_));
}
Npc::~Npc() {
  // @@protoc_insertion_point(destructor:tibia.protobuf.map.Npc)
  SharedDtor(*this);
}
inline void Npc::SharedDtor(MessageLite& self) {
  Npc& this_ = static_cast<Npc&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.tile_coordinate_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Npc::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Npc(arena);
}
constexpr auto Npc::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Npc),
                                            alignof(Npc));
}
constexpr auto Npc::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Npc_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Npc::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Npc>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Npc::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Npc>(), &Npc::ByteSizeLong,
              &Npc::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Npc, _impl_._cached_size_),
          false,
      },
      &Npc::kDescriptorMethods,
      &descriptor_table_map_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Npc_class_data_ =
        Npc::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Npc::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Npc_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Npc_class_data_.tc_table);
  return Npc_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 35, 2>
Npc::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Npc, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Npc_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tibia::protobuf::map::Npc>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Npc, _impl_.name_)}},
    // optional .tibia.protobuf.shared.Coordinate tile_coordinate = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Npc, _impl_.tile_coordinate_)}},
    // optional uint32 subarea_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Npc, _impl_.subarea_id_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Npc, _impl_.subarea_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(Npc, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .tibia.protobuf.shared.Coordinate tile_coordinate = 2;
    {PROTOBUF_FIELD_OFFSET(Npc, _impl_.tile_coordinate_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 subarea_id = 3;
    {PROTOBUF_FIELD_OFFSET(Npc, _impl_.subarea_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tibia::protobuf::shared::Coordinate>()},
  }},
  {{
    "\26\4\0\0\0\0\0\0"
    "tibia.protobuf.map.Npc"
    "name"
  }},
};
PROTOBUF_NOINLINE void Npc::Clear() {
// @@protoc_insertion_point(message_clear_start:tibia.protobuf.map.Npc)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.tile_coordinate_ != nullptr);
      _impl_.tile_coordinate_->Clear();
    }
  }
  _impl_.subarea_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Npc::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Npc& this_ = static_cast<const Npc&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Npc::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Npc& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tibia.protobuf.map.Npc)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tibia.protobuf.map.Npc.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional .tibia.protobuf.shared.Coordinate tile_coordinate = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.tile_coordinate_, this_._impl_.tile_coordinate_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 subarea_id = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_subarea_id(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tibia.protobuf.map.Npc)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Npc::ByteSizeLong(const MessageLite& base) {
  const Npc& this_ = static_cast<const Npc&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Npc::ByteSizeLong() const {
  const Npc& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tibia.protobuf.map.Npc)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional .tibia.protobuf.shared.Coordinate tile_coordinate = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tile_coordinate_);
    }
    // optional uint32 subarea_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_subarea_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Npc::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Npc*>(&to_msg);
  auto& from = static_cast<const Npc&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tibia.protobuf.map.Npc)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.tile_coordinate_ != nullptr);
      if (_this->_impl_.tile_coordinate_ == nullptr) {
        _this->_impl_.tile_coordinate_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tile_coordinate_);
      } else {
        _this->_impl_.tile_coordinate_->MergeFrom(*from._impl_.tile_coordinate_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.subarea_id_ = from._impl_.subarea_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Npc::CopyFrom(const Npc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tibia.protobuf.map.Npc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Npc::InternalSwap(Npc* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Npc, _impl_.subarea_id_)
      + sizeof(Npc::_impl_.subarea_id_)
      - PROTOBUF_FIELD_OFFSET(Npc, _impl_.tile_coordinate_)>(
          reinterpret_cast<char*>(&_impl_.tile_coordinate_),
          reinterpret_cast<char*>(&other->_impl_.tile_coordinate_));
}

::google::protobuf::Metadata Npc::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MapFile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MapFile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MapFile, _impl_._has_bits_);
};

void MapFile::clear_top_left_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.top_left_coordinate_ != nullptr) _impl_.top_left_coordinate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MapFile::MapFile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapFile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tibia.protobuf.map.MapFile)
}
PROTOBUF_NDEBUG_INLINE MapFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tibia::protobuf::map::MapFile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        file_name_(arena, from.file_name_) {}

MapFile::MapFile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MapFile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapFile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MapFile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.top_left_coordinate_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.top_left_coordinate_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, file_type_),
           offsetof(Impl_, scale_factor_) -
               offsetof(Impl_, file_type_) +
               sizeof(Impl_::scale_factor_));

  // @@protoc_insertion_point(copy_constructor:tibia.protobuf.map.MapFile)
}
PROTOBUF_NDEBUG_INLINE MapFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        file_name_(arena) {}

inline void MapFile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, top_left_coordinate_),
           0,
           offsetof(Impl_, scale_factor_) -
               offsetof(Impl_, top_left_coordinate_) +
               sizeof(Impl_::scale_factor_));
}
MapFile::~MapFile() {
  // @@protoc_insertion_point(destructor:tibia.protobuf.map.MapFile)
  SharedDtor(*this);
}
inline void MapFile::SharedDtor(MessageLite& self) {
  MapFile& this_ = static_cast<MapFile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.file_name_.Destroy();
  delete this_._impl_.top_left_coordinate_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MapFile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MapFile(arena);
}
constexpr auto MapFile::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MapFile),
                                            alignof(MapFile));
}
constexpr auto MapFile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MapFile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MapFile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MapFile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MapFile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MapFile>(), &MapFile::ByteSizeLong,
              &MapFile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MapFile, _impl_._cached_size_),
          false,
      },
      &MapFile::kDescriptorMethods,
      &descriptor_table_map_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MapFile_class_data_ =
        MapFile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MapFile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MapFile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MapFile_class_data_.tc_table);
  return MapFile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 44, 2>
MapFile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MapFile, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MapFile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tibia::protobuf::map::MapFile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .tibia.protobuf.map.MAP_FILE_TYPE file_type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 2, 2, PROTOBUF_FIELD_OFFSET(MapFile, _impl_.file_type_)}},
    // optional .tibia.protobuf.shared.Coordinate top_left_coordinate = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(MapFile, _impl_.top_left_coordinate_)}},
    // optional string file_name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(MapFile, _impl_.file_name_)}},
    // optional uint32 fields_width = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MapFile, _impl_.fields_width_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(MapFile, _impl_.fields_width_)}},
    // optional uint32 fields_height = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MapFile, _impl_.fields_height_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(MapFile, _impl_.fields_height_)}},
    // optional uint32 area_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MapFile, _impl_.area_id_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(MapFile, _impl_.area_id_)}},
    // optional double scale_factor = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 6, 0, PROTOBUF_FIELD_OFFSET(MapFile, _impl_.scale_factor_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .tibia.protobuf.map.MAP_FILE_TYPE file_type = 1;
    {PROTOBUF_FIELD_OFFSET(MapFile, _impl_.file_type_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .tibia.protobuf.shared.Coordinate top_left_coordinate = 2;
    {PROTOBUF_FIELD_OFFSET(MapFile, _impl_.top_left_coordinate_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string file_name = 3;
    {PROTOBUF_FIELD_OFFSET(MapFile, _impl_.file_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 fields_width = 4;
    {PROTOBUF_FIELD_OFFSET(MapFile, _impl_.fields_width_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 fields_height = 5;
    {PROTOBUF_FIELD_OFFSET(MapFile, _impl_.fields_height_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 area_id = 6;
    {PROTOBUF_FIELD_OFFSET(MapFile, _impl_.area_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional double scale_factor = 7;
    {PROTOBUF_FIELD_OFFSET(MapFile, _impl_.scale_factor_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tibia::protobuf::shared::Coordinate>()},
      {0, 2},
  }},
  {{
    "\32\0\0\11\0\0\0\0"
    "tibia.protobuf.map.MapFile"
    "file_name"
  }},
};
PROTOBUF_NOINLINE void MapFile::Clear() {
// @@protoc_insertion_point(message_clear_start:tibia.protobuf.map.MapFile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.file_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.top_left_coordinate_ != nullptr);
      _impl_.top_left_coordinate_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000007cu) != 0) {
    ::memset(&_impl_.file_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.scale_factor_) -
        reinterpret_cast<char*>(&_impl_.file_type_)) + sizeof(_impl_.scale_factor_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MapFile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MapFile& this_ = static_cast<const MapFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MapFile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MapFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tibia.protobuf.map.MapFile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .tibia.protobuf.map.MAP_FILE_TYPE file_type = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this_._internal_file_type(), target);
  }

  // optional .tibia.protobuf.shared.Coordinate top_left_coordinate = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.top_left_coordinate_, this_._impl_.top_left_coordinate_->GetCachedSize(), target,
        stream);
  }

  // optional string file_name = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_file_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tibia.protobuf.map.MapFile.file_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint32 fields_width = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_fields_width(), target);
  }

  // optional uint32 fields_height = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_fields_height(), target);
  }

  // optional uint32 area_id = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_area_id(), target);
  }

  // optional double scale_factor = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this_._internal_scale_factor(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tibia.protobuf.map.MapFile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MapFile::ByteSizeLong(const MessageLite& base) {
  const MapFile& this_ = static_cast<const MapFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MapFile::ByteSizeLong() const {
  const MapFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tibia.protobuf.map.MapFile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000040u & cached_has_bits) * 9;
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // optional string file_name = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_file_name());
    }
    // optional .tibia.protobuf.shared.Coordinate top_left_coordinate = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.top_left_coordinate_);
    }
    // optional .tibia.protobuf.map.MAP_FILE_TYPE file_type = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_file_type());
    }
    // optional uint32 fields_width = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_fields_width());
    }
    // optional uint32 fields_height = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_fields_height());
    }
    // optional uint32 area_id = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_area_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MapFile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapFile*>(&to_msg);
  auto& from = static_cast<const MapFile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tibia.protobuf.map.MapFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_file_name(from._internal_file_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.top_left_coordinate_ != nullptr);
      if (_this->_impl_.top_left_coordinate_ == nullptr) {
        _this->_impl_.top_left_coordinate_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.top_left_coordinate_);
      } else {
        _this->_impl_.top_left_coordinate_->MergeFrom(*from._impl_.top_left_coordinate_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.file_type_ = from._impl_.file_type_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.fields_width_ = from._impl_.fields_width_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.fields_height_ = from._impl_.fields_height_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.area_id_ = from._impl_.area_id_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.scale_factor_ = from._impl_.scale_factor_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapFile::CopyFrom(const MapFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tibia.protobuf.map.MapFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MapFile::InternalSwap(MapFile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_name_, &other->_impl_.file_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MapFile, _impl_.scale_factor_)
      + sizeof(MapFile::_impl_.scale_factor_)
      - PROTOBUF_FIELD_OFFSET(MapFile, _impl_.top_left_coordinate_)>(
          reinterpret_cast<char*>(&_impl_.top_left_coordinate_),
          reinterpret_cast<char*>(&other->_impl_.top_left_coordinate_));
}

::google::protobuf::Metadata MapFile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace map
}  // namespace protobuf
}  // namespace tibia
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_map_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
