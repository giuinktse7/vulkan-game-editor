// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: map.proto
// Protobuf C++ Version: 6.31.1

#ifndef map_2eproto_2epb_2eh
#define map_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "shared.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_map_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_map_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_map_2eproto;
}  // extern "C"
namespace tibia {
namespace protobuf {
namespace map {
enum AREA_TYPE : int;
extern const uint32_t AREA_TYPE_internal_data_[];
enum MAP_FILE_TYPE : int;
extern const uint32_t MAP_FILE_TYPE_internal_data_[];
class Area;
struct AreaDefaultTypeInternal;
extern AreaDefaultTypeInternal _Area_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Area_class_data_;
class Map;
struct MapDefaultTypeInternal;
extern MapDefaultTypeInternal _Map_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Map_class_data_;
class MapFile;
struct MapFileDefaultTypeInternal;
extern MapFileDefaultTypeInternal _MapFile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MapFile_class_data_;
class Npc;
struct NpcDefaultTypeInternal;
extern NpcDefaultTypeInternal _Npc_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Npc_class_data_;
}  // namespace map
}  // namespace protobuf
}  // namespace tibia
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::tibia::protobuf::map::AREA_TYPE_internal_data_>
    internal::EnumTraitsImpl::value<::tibia::protobuf::map::AREA_TYPE>;
template <>
internal::EnumTraitsT<::tibia::protobuf::map::MAP_FILE_TYPE_internal_data_>
    internal::EnumTraitsImpl::value<::tibia::protobuf::map::MAP_FILE_TYPE>;
}  // namespace protobuf
}  // namespace google

namespace tibia {
namespace protobuf {
namespace map {
enum MAP_FILE_TYPE : int {
  MAP_FILE_TYPE_SUBAREA = 0,
  MAP_FILE_TYPE_SATELLITE = 1,
  MAP_FILE_TYPE_MINIMAP = 2,
};

extern const uint32_t MAP_FILE_TYPE_internal_data_[];
inline constexpr MAP_FILE_TYPE MAP_FILE_TYPE_MIN =
    static_cast<MAP_FILE_TYPE>(0);
inline constexpr MAP_FILE_TYPE MAP_FILE_TYPE_MAX =
    static_cast<MAP_FILE_TYPE>(2);
inline bool MAP_FILE_TYPE_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int MAP_FILE_TYPE_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MAP_FILE_TYPE_descriptor();
template <typename T>
const ::std::string& MAP_FILE_TYPE_Name(T value) {
  static_assert(::std::is_same<T, MAP_FILE_TYPE>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to MAP_FILE_TYPE_Name().");
  return MAP_FILE_TYPE_Name(static_cast<MAP_FILE_TYPE>(value));
}
template <>
inline const ::std::string& MAP_FILE_TYPE_Name(MAP_FILE_TYPE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MAP_FILE_TYPE_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool MAP_FILE_TYPE_Parse(
    ::absl::string_view name, MAP_FILE_TYPE* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<MAP_FILE_TYPE>(MAP_FILE_TYPE_descriptor(), name,
                                           value);
}
enum AREA_TYPE : int {
  AREA_TYPE_NONE = 0,
  AREA_TYPE_AREA = 1,
  AREA_TYPE_SUBAREA = 2,
};

extern const uint32_t AREA_TYPE_internal_data_[];
inline constexpr AREA_TYPE AREA_TYPE_MIN =
    static_cast<AREA_TYPE>(0);
inline constexpr AREA_TYPE AREA_TYPE_MAX =
    static_cast<AREA_TYPE>(2);
inline bool AREA_TYPE_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int AREA_TYPE_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AREA_TYPE_descriptor();
template <typename T>
const ::std::string& AREA_TYPE_Name(T value) {
  static_assert(::std::is_same<T, AREA_TYPE>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to AREA_TYPE_Name().");
  return AREA_TYPE_Name(static_cast<AREA_TYPE>(value));
}
template <>
inline const ::std::string& AREA_TYPE_Name(AREA_TYPE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AREA_TYPE_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool AREA_TYPE_Parse(
    ::absl::string_view name, AREA_TYPE* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<AREA_TYPE>(AREA_TYPE_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class Npc final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tibia.protobuf.map.Npc) */ {
 public:
  inline Npc() : Npc(nullptr) {}
  ~Npc() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Npc* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Npc));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Npc(::google::protobuf::internal::ConstantInitialized);

  inline Npc(const Npc& from) : Npc(nullptr, from) {}
  inline Npc(Npc&& from) noexcept
      : Npc(nullptr, ::std::move(from)) {}
  inline Npc& operator=(const Npc& from) {
    CopyFrom(from);
    return *this;
  }
  inline Npc& operator=(Npc&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Npc& default_instance() {
    return *reinterpret_cast<const Npc*>(
        &_Npc_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Npc& a, Npc& b) { a.Swap(&b); }
  inline void Swap(Npc* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Npc* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Npc* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Npc>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Npc& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Npc& from) { Npc::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Npc* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tibia.protobuf.map.Npc"; }

 protected:
  explicit Npc(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Npc(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Npc& from);
  Npc(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Npc&& from) noexcept
      : Npc(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kTileCoordinateFieldNumber = 2,
    kSubareaIdFieldNumber = 3,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // optional .tibia.protobuf.shared.Coordinate tile_coordinate = 2;
  bool has_tile_coordinate() const;
  void clear_tile_coordinate() ;
  const ::tibia::protobuf::shared::Coordinate& tile_coordinate() const;
  [[nodiscard]] ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE release_tile_coordinate();
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL mutable_tile_coordinate();
  void set_allocated_tile_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tile_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value);
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE unsafe_arena_release_tile_coordinate();

  private:
  const ::tibia::protobuf::shared::Coordinate& _internal_tile_coordinate() const;
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL _internal_mutable_tile_coordinate();

  public:
  // optional uint32 subarea_id = 3;
  bool has_subarea_id() const;
  void clear_subarea_id() ;
  ::uint32_t subarea_id() const;
  void set_subarea_id(::uint32_t value);

  private:
  ::uint32_t _internal_subarea_id() const;
  void _internal_set_subarea_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tibia.protobuf.map.Npc)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 35,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Npc& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE tile_coordinate_;
    ::uint32_t subarea_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_map_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Npc_class_data_;
// -------------------------------------------------------------------

class MapFile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tibia.protobuf.map.MapFile) */ {
 public:
  inline MapFile() : MapFile(nullptr) {}
  ~MapFile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MapFile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MapFile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MapFile(::google::protobuf::internal::ConstantInitialized);

  inline MapFile(const MapFile& from) : MapFile(nullptr, from) {}
  inline MapFile(MapFile&& from) noexcept
      : MapFile(nullptr, ::std::move(from)) {}
  inline MapFile& operator=(const MapFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapFile& operator=(MapFile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MapFile& default_instance() {
    return *reinterpret_cast<const MapFile*>(
        &_MapFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MapFile& a, MapFile& b) { a.Swap(&b); }
  inline void Swap(MapFile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapFile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MapFile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MapFile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MapFile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MapFile& from) { MapFile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MapFile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tibia.protobuf.map.MapFile"; }

 protected:
  explicit MapFile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MapFile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MapFile& from);
  MapFile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MapFile&& from) noexcept
      : MapFile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileNameFieldNumber = 3,
    kTopLeftCoordinateFieldNumber = 2,
    kFileTypeFieldNumber = 1,
    kFieldsWidthFieldNumber = 4,
    kFieldsHeightFieldNumber = 5,
    kAreaIdFieldNumber = 6,
    kScaleFactorFieldNumber = 7,
  };
  // optional string file_name = 3;
  bool has_file_name() const;
  void clear_file_name() ;
  const ::std::string& file_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_file_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_file_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_file_name();
  void set_allocated_file_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_file_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_file_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_file_name();

  public:
  // optional .tibia.protobuf.shared.Coordinate top_left_coordinate = 2;
  bool has_top_left_coordinate() const;
  void clear_top_left_coordinate() ;
  const ::tibia::protobuf::shared::Coordinate& top_left_coordinate() const;
  [[nodiscard]] ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE release_top_left_coordinate();
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL mutable_top_left_coordinate();
  void set_allocated_top_left_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_top_left_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value);
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE unsafe_arena_release_top_left_coordinate();

  private:
  const ::tibia::protobuf::shared::Coordinate& _internal_top_left_coordinate() const;
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL _internal_mutable_top_left_coordinate();

  public:
  // optional .tibia.protobuf.map.MAP_FILE_TYPE file_type = 1;
  bool has_file_type() const;
  void clear_file_type() ;
  ::tibia::protobuf::map::MAP_FILE_TYPE file_type() const;
  void set_file_type(::tibia::protobuf::map::MAP_FILE_TYPE value);

  private:
  ::tibia::protobuf::map::MAP_FILE_TYPE _internal_file_type() const;
  void _internal_set_file_type(::tibia::protobuf::map::MAP_FILE_TYPE value);

  public:
  // optional uint32 fields_width = 4;
  bool has_fields_width() const;
  void clear_fields_width() ;
  ::uint32_t fields_width() const;
  void set_fields_width(::uint32_t value);

  private:
  ::uint32_t _internal_fields_width() const;
  void _internal_set_fields_width(::uint32_t value);

  public:
  // optional uint32 fields_height = 5;
  bool has_fields_height() const;
  void clear_fields_height() ;
  ::uint32_t fields_height() const;
  void set_fields_height(::uint32_t value);

  private:
  ::uint32_t _internal_fields_height() const;
  void _internal_set_fields_height(::uint32_t value);

  public:
  // optional uint32 area_id = 6;
  bool has_area_id() const;
  void clear_area_id() ;
  ::uint32_t area_id() const;
  void set_area_id(::uint32_t value);

  private:
  ::uint32_t _internal_area_id() const;
  void _internal_set_area_id(::uint32_t value);

  public:
  // optional double scale_factor = 7;
  bool has_scale_factor() const;
  void clear_scale_factor() ;
  double scale_factor() const;
  void set_scale_factor(double value);

  private:
  double _internal_scale_factor() const;
  void _internal_set_scale_factor(double value);

  public:
  // @@protoc_insertion_point(class_scope:tibia.protobuf.map.MapFile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   2, 44,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MapFile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr file_name_;
    ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE top_left_coordinate_;
    int file_type_;
    ::uint32_t fields_width_;
    ::uint32_t fields_height_;
    ::uint32_t area_id_;
    double scale_factor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_map_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MapFile_class_data_;
// -------------------------------------------------------------------

class Area final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tibia.protobuf.map.Area) */ {
 public:
  inline Area() : Area(nullptr) {}
  ~Area() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Area* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Area));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Area(::google::protobuf::internal::ConstantInitialized);

  inline Area(const Area& from) : Area(nullptr, from) {}
  inline Area(Area&& from) noexcept
      : Area(nullptr, ::std::move(from)) {}
  inline Area& operator=(const Area& from) {
    CopyFrom(from);
    return *this;
  }
  inline Area& operator=(Area&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Area& default_instance() {
    return *reinterpret_cast<const Area*>(
        &_Area_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Area& a, Area& b) { a.Swap(&b); }
  inline void Swap(Area* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Area* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Area* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Area>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Area& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Area& from) { Area::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Area* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tibia.protobuf.map.Area"; }

 protected:
  explicit Area(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Area(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Area& from);
  Area(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Area&& from) noexcept
      : Area(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubareaIdsFieldNumber = 4,
    kNameFieldNumber = 2,
    kAliasFieldNumber = 7,
    kLabelCoordinateFieldNumber = 5,
    kAreaIdFieldNumber = 1,
    kAreaTypeFieldNumber = 3,
    kRejectDonationsFieldNumber = 6,
  };
  // repeated uint32 subarea_ids = 4;
  int subarea_ids_size() const;
  private:
  int _internal_subarea_ids_size() const;

  public:
  void clear_subarea_ids() ;
  ::uint32_t subarea_ids(int index) const;
  void set_subarea_ids(int index, ::uint32_t value);
  void add_subarea_ids(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& subarea_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_subarea_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_subarea_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_subarea_ids();

  public:
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // optional string alias = 7;
  bool has_alias() const;
  void clear_alias() ;
  const ::std::string& alias() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_alias(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_alias();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_alias();
  void set_allocated_alias(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_alias() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_alias(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_alias();

  public:
  // optional .tibia.protobuf.shared.Coordinate label_coordinate = 5;
  bool has_label_coordinate() const;
  void clear_label_coordinate() ;
  const ::tibia::protobuf::shared::Coordinate& label_coordinate() const;
  [[nodiscard]] ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE release_label_coordinate();
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL mutable_label_coordinate();
  void set_allocated_label_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_label_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value);
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE unsafe_arena_release_label_coordinate();

  private:
  const ::tibia::protobuf::shared::Coordinate& _internal_label_coordinate() const;
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL _internal_mutable_label_coordinate();

  public:
  // optional uint32 area_id = 1;
  bool has_area_id() const;
  void clear_area_id() ;
  ::uint32_t area_id() const;
  void set_area_id(::uint32_t value);

  private:
  ::uint32_t _internal_area_id() const;
  void _internal_set_area_id(::uint32_t value);

  public:
  // optional .tibia.protobuf.map.AREA_TYPE area_type = 3;
  bool has_area_type() const;
  void clear_area_type() ;
  ::tibia::protobuf::map::AREA_TYPE area_type() const;
  void set_area_type(::tibia::protobuf::map::AREA_TYPE value);

  private:
  ::tibia::protobuf::map::AREA_TYPE _internal_area_type() const;
  void _internal_set_area_type(::tibia::protobuf::map::AREA_TYPE value);

  public:
  // optional bool reject_donations = 6;
  bool has_reject_donations() const;
  void clear_reject_donations() ;
  bool reject_donations() const;
  void set_reject_donations(bool value);

  private:
  bool _internal_reject_donations() const;
  void _internal_set_reject_donations(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tibia.protobuf.map.Area)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   2, 41,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Area& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> subarea_ids_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr alias_;
    ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE label_coordinate_;
    ::uint32_t area_id_;
    int area_type_;
    bool reject_donations_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_map_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Area_class_data_;
// -------------------------------------------------------------------

class Map final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tibia.protobuf.map.Map) */ {
 public:
  inline Map() : Map(nullptr) {}
  ~Map() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Map* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Map));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Map(::google::protobuf::internal::ConstantInitialized);

  inline Map(const Map& from) : Map(nullptr, from) {}
  inline Map(Map&& from) noexcept
      : Map(nullptr, ::std::move(from)) {}
  inline Map& operator=(const Map& from) {
    CopyFrom(from);
    return *this;
  }
  inline Map& operator=(Map&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Map& default_instance() {
    return *reinterpret_cast<const Map*>(
        &_Map_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Map& a, Map& b) { a.Swap(&b); }
  inline void Swap(Map* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Map* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Map* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Map>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Map& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Map& from) { Map::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Map* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tibia.protobuf.map.Map"; }

 protected:
  explicit Map(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Map(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Map& from);
  Map(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Map&& from) noexcept
      : Map(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAreasFieldNumber = 1,
    kNpcsFieldNumber = 2,
    kResourceFilesFieldNumber = 3,
    kTopLeftTileCoordinateFieldNumber = 4,
    kBottomRightTileCoordinateFieldNumber = 5,
  };
  // repeated .tibia.protobuf.map.Area areas = 1;
  int areas_size() const;
  private:
  int _internal_areas_size() const;

  public:
  void clear_areas() ;
  ::tibia::protobuf::map::Area* PROTOBUF_NONNULL mutable_areas(int index);
  ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Area>* PROTOBUF_NONNULL mutable_areas();

  private:
  const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Area>& _internal_areas() const;
  ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Area>* PROTOBUF_NONNULL _internal_mutable_areas();
  public:
  const ::tibia::protobuf::map::Area& areas(int index) const;
  ::tibia::protobuf::map::Area* PROTOBUF_NONNULL add_areas();
  const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Area>& areas() const;
  // repeated .tibia.protobuf.map.Npc npcs = 2;
  int npcs_size() const;
  private:
  int _internal_npcs_size() const;

  public:
  void clear_npcs() ;
  ::tibia::protobuf::map::Npc* PROTOBUF_NONNULL mutable_npcs(int index);
  ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Npc>* PROTOBUF_NONNULL mutable_npcs();

  private:
  const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Npc>& _internal_npcs() const;
  ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Npc>* PROTOBUF_NONNULL _internal_mutable_npcs();
  public:
  const ::tibia::protobuf::map::Npc& npcs(int index) const;
  ::tibia::protobuf::map::Npc* PROTOBUF_NONNULL add_npcs();
  const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Npc>& npcs() const;
  // repeated .tibia.protobuf.map.MapFile resource_files = 3;
  int resource_files_size() const;
  private:
  int _internal_resource_files_size() const;

  public:
  void clear_resource_files() ;
  ::tibia::protobuf::map::MapFile* PROTOBUF_NONNULL mutable_resource_files(int index);
  ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::MapFile>* PROTOBUF_NONNULL mutable_resource_files();

  private:
  const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::MapFile>& _internal_resource_files() const;
  ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::MapFile>* PROTOBUF_NONNULL _internal_mutable_resource_files();
  public:
  const ::tibia::protobuf::map::MapFile& resource_files(int index) const;
  ::tibia::protobuf::map::MapFile* PROTOBUF_NONNULL add_resource_files();
  const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::MapFile>& resource_files() const;
  // optional .tibia.protobuf.shared.Coordinate top_left_tile_coordinate = 4;
  bool has_top_left_tile_coordinate() const;
  void clear_top_left_tile_coordinate() ;
  const ::tibia::protobuf::shared::Coordinate& top_left_tile_coordinate() const;
  [[nodiscard]] ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE release_top_left_tile_coordinate();
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL mutable_top_left_tile_coordinate();
  void set_allocated_top_left_tile_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_top_left_tile_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value);
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE unsafe_arena_release_top_left_tile_coordinate();

  private:
  const ::tibia::protobuf::shared::Coordinate& _internal_top_left_tile_coordinate() const;
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL _internal_mutable_top_left_tile_coordinate();

  public:
  // optional .tibia.protobuf.shared.Coordinate bottom_right_tile_coordinate = 5;
  bool has_bottom_right_tile_coordinate() const;
  void clear_bottom_right_tile_coordinate() ;
  const ::tibia::protobuf::shared::Coordinate& bottom_right_tile_coordinate() const;
  [[nodiscard]] ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE release_bottom_right_tile_coordinate();
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL mutable_bottom_right_tile_coordinate();
  void set_allocated_bottom_right_tile_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_bottom_right_tile_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value);
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE unsafe_arena_release_bottom_right_tile_coordinate();

  private:
  const ::tibia::protobuf::shared::Coordinate& _internal_bottom_right_tile_coordinate() const;
  ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL _internal_mutable_bottom_right_tile_coordinate();

  public:
  // @@protoc_insertion_point(class_scope:tibia.protobuf.map.Map)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   5, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Map& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::map::Area > areas_;
    ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::map::Npc > npcs_;
    ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::map::MapFile > resource_files_;
    ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE top_left_tile_coordinate_;
    ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE bottom_right_tile_coordinate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_map_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Map_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Map

// repeated .tibia.protobuf.map.Area areas = 1;
inline int Map::_internal_areas_size() const {
  return _internal_areas().size();
}
inline int Map::areas_size() const {
  return _internal_areas_size();
}
inline void Map::clear_areas() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.areas_.Clear();
}
inline ::tibia::protobuf::map::Area* PROTOBUF_NONNULL Map::mutable_areas(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.Map.areas)
  return _internal_mutable_areas()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Area>* PROTOBUF_NONNULL Map::mutable_areas()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.map.Map.areas)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_areas();
}
inline const ::tibia::protobuf::map::Area& Map::areas(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Map.areas)
  return _internal_areas().Get(index);
}
inline ::tibia::protobuf::map::Area* PROTOBUF_NONNULL Map::add_areas()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tibia::protobuf::map::Area* _add = _internal_mutable_areas()->Add();
  // @@protoc_insertion_point(field_add:tibia.protobuf.map.Map.areas)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Area>& Map::areas() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tibia.protobuf.map.Map.areas)
  return _internal_areas();
}
inline const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Area>&
Map::_internal_areas() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.areas_;
}
inline ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Area>* PROTOBUF_NONNULL
Map::_internal_mutable_areas() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.areas_;
}

// repeated .tibia.protobuf.map.Npc npcs = 2;
inline int Map::_internal_npcs_size() const {
  return _internal_npcs().size();
}
inline int Map::npcs_size() const {
  return _internal_npcs_size();
}
inline void Map::clear_npcs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.npcs_.Clear();
}
inline ::tibia::protobuf::map::Npc* PROTOBUF_NONNULL Map::mutable_npcs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.Map.npcs)
  return _internal_mutable_npcs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Npc>* PROTOBUF_NONNULL Map::mutable_npcs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.map.Map.npcs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_npcs();
}
inline const ::tibia::protobuf::map::Npc& Map::npcs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Map.npcs)
  return _internal_npcs().Get(index);
}
inline ::tibia::protobuf::map::Npc* PROTOBUF_NONNULL Map::add_npcs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tibia::protobuf::map::Npc* _add = _internal_mutable_npcs()->Add();
  // @@protoc_insertion_point(field_add:tibia.protobuf.map.Map.npcs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Npc>& Map::npcs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tibia.protobuf.map.Map.npcs)
  return _internal_npcs();
}
inline const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Npc>&
Map::_internal_npcs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.npcs_;
}
inline ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::Npc>* PROTOBUF_NONNULL
Map::_internal_mutable_npcs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.npcs_;
}

// repeated .tibia.protobuf.map.MapFile resource_files = 3;
inline int Map::_internal_resource_files_size() const {
  return _internal_resource_files().size();
}
inline int Map::resource_files_size() const {
  return _internal_resource_files_size();
}
inline void Map::clear_resource_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_files_.Clear();
}
inline ::tibia::protobuf::map::MapFile* PROTOBUF_NONNULL Map::mutable_resource_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.Map.resource_files)
  return _internal_mutable_resource_files()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::MapFile>* PROTOBUF_NONNULL Map::mutable_resource_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.map.Map.resource_files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_resource_files();
}
inline const ::tibia::protobuf::map::MapFile& Map::resource_files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Map.resource_files)
  return _internal_resource_files().Get(index);
}
inline ::tibia::protobuf::map::MapFile* PROTOBUF_NONNULL Map::add_resource_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tibia::protobuf::map::MapFile* _add = _internal_mutable_resource_files()->Add();
  // @@protoc_insertion_point(field_add:tibia.protobuf.map.Map.resource_files)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::MapFile>& Map::resource_files() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tibia.protobuf.map.Map.resource_files)
  return _internal_resource_files();
}
inline const ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::MapFile>&
Map::_internal_resource_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resource_files_;
}
inline ::google::protobuf::RepeatedPtrField<::tibia::protobuf::map::MapFile>* PROTOBUF_NONNULL
Map::_internal_mutable_resource_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.resource_files_;
}

// optional .tibia.protobuf.shared.Coordinate top_left_tile_coordinate = 4;
inline bool Map::has_top_left_tile_coordinate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.top_left_tile_coordinate_ != nullptr);
  return value;
}
inline const ::tibia::protobuf::shared::Coordinate& Map::_internal_top_left_tile_coordinate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tibia::protobuf::shared::Coordinate* p = _impl_.top_left_tile_coordinate_;
  return p != nullptr ? *p : reinterpret_cast<const ::tibia::protobuf::shared::Coordinate&>(::tibia::protobuf::shared::_Coordinate_default_instance_);
}
inline const ::tibia::protobuf::shared::Coordinate& Map::top_left_tile_coordinate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Map.top_left_tile_coordinate)
  return _internal_top_left_tile_coordinate();
}
inline void Map::unsafe_arena_set_allocated_top_left_tile_coordinate(
    ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.top_left_tile_coordinate_);
  }
  _impl_.top_left_tile_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tibia.protobuf.map.Map.top_left_tile_coordinate)
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE Map::release_top_left_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tibia::protobuf::shared::Coordinate* released = _impl_.top_left_tile_coordinate_;
  _impl_.top_left_tile_coordinate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE Map::unsafe_arena_release_top_left_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tibia.protobuf.map.Map.top_left_tile_coordinate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tibia::protobuf::shared::Coordinate* temp = _impl_.top_left_tile_coordinate_;
  _impl_.top_left_tile_coordinate_ = nullptr;
  return temp;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL Map::_internal_mutable_top_left_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.top_left_tile_coordinate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tibia::protobuf::shared::Coordinate>(GetArena());
    _impl_.top_left_tile_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(p);
  }
  return _impl_.top_left_tile_coordinate_;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL Map::mutable_top_left_tile_coordinate()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tibia::protobuf::shared::Coordinate* _msg = _internal_mutable_top_left_tile_coordinate();
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.Map.top_left_tile_coordinate)
  return _msg;
}
inline void Map::set_allocated_top_left_tile_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.top_left_tile_coordinate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.top_left_tile_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.map.Map.top_left_tile_coordinate)
}

// optional .tibia.protobuf.shared.Coordinate bottom_right_tile_coordinate = 5;
inline bool Map::has_bottom_right_tile_coordinate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bottom_right_tile_coordinate_ != nullptr);
  return value;
}
inline const ::tibia::protobuf::shared::Coordinate& Map::_internal_bottom_right_tile_coordinate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tibia::protobuf::shared::Coordinate* p = _impl_.bottom_right_tile_coordinate_;
  return p != nullptr ? *p : reinterpret_cast<const ::tibia::protobuf::shared::Coordinate&>(::tibia::protobuf::shared::_Coordinate_default_instance_);
}
inline const ::tibia::protobuf::shared::Coordinate& Map::bottom_right_tile_coordinate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Map.bottom_right_tile_coordinate)
  return _internal_bottom_right_tile_coordinate();
}
inline void Map::unsafe_arena_set_allocated_bottom_right_tile_coordinate(
    ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bottom_right_tile_coordinate_);
  }
  _impl_.bottom_right_tile_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tibia.protobuf.map.Map.bottom_right_tile_coordinate)
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE Map::release_bottom_right_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tibia::protobuf::shared::Coordinate* released = _impl_.bottom_right_tile_coordinate_;
  _impl_.bottom_right_tile_coordinate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE Map::unsafe_arena_release_bottom_right_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tibia.protobuf.map.Map.bottom_right_tile_coordinate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tibia::protobuf::shared::Coordinate* temp = _impl_.bottom_right_tile_coordinate_;
  _impl_.bottom_right_tile_coordinate_ = nullptr;
  return temp;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL Map::_internal_mutable_bottom_right_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bottom_right_tile_coordinate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tibia::protobuf::shared::Coordinate>(GetArena());
    _impl_.bottom_right_tile_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(p);
  }
  return _impl_.bottom_right_tile_coordinate_;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL Map::mutable_bottom_right_tile_coordinate()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tibia::protobuf::shared::Coordinate* _msg = _internal_mutable_bottom_right_tile_coordinate();
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.Map.bottom_right_tile_coordinate)
  return _msg;
}
inline void Map::set_allocated_bottom_right_tile_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bottom_right_tile_coordinate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.bottom_right_tile_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.map.Map.bottom_right_tile_coordinate)
}

// -------------------------------------------------------------------

// Area

// optional uint32 area_id = 1;
inline bool Area::has_area_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Area::clear_area_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.area_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t Area::area_id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Area.area_id)
  return _internal_area_id();
}
inline void Area::set_area_id(::uint32_t value) {
  _internal_set_area_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.Area.area_id)
}
inline ::uint32_t Area::_internal_area_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.area_id_;
}
inline void Area::_internal_set_area_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.area_id_ = value;
}

// optional string name = 2;
inline bool Area::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Area::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Area::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Area.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Area::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.Area.name)
}
inline ::std::string* PROTOBUF_NONNULL Area::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.Area.name)
  return _s;
}
inline const ::std::string& Area::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Area::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Area::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Area::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tibia.protobuf.map.Area.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Area::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.map.Area.name)
}

// optional .tibia.protobuf.map.AREA_TYPE area_type = 3;
inline bool Area::has_area_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Area::clear_area_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.area_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::tibia::protobuf::map::AREA_TYPE Area::area_type() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Area.area_type)
  return _internal_area_type();
}
inline void Area::set_area_type(::tibia::protobuf::map::AREA_TYPE value) {
  _internal_set_area_type(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.Area.area_type)
}
inline ::tibia::protobuf::map::AREA_TYPE Area::_internal_area_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tibia::protobuf::map::AREA_TYPE>(_impl_.area_type_);
}
inline void Area::_internal_set_area_type(::tibia::protobuf::map::AREA_TYPE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::tibia::protobuf::map::AREA_TYPE_internal_data_));
                                          _impl_.area_type_ = value;
}

// repeated uint32 subarea_ids = 4;
inline int Area::_internal_subarea_ids_size() const {
  return _internal_subarea_ids().size();
}
inline int Area::subarea_ids_size() const {
  return _internal_subarea_ids_size();
}
inline void Area::clear_subarea_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subarea_ids_.Clear();
}
inline ::uint32_t Area::subarea_ids(int index) const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Area.subarea_ids)
  return _internal_subarea_ids().Get(index);
}
inline void Area::set_subarea_ids(int index, ::uint32_t value) {
  _internal_mutable_subarea_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.Area.subarea_ids)
}
inline void Area::add_subarea_ids(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_subarea_ids()->Add(value);
  // @@protoc_insertion_point(field_add:tibia.protobuf.map.Area.subarea_ids)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& Area::subarea_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tibia.protobuf.map.Area.subarea_ids)
  return _internal_subarea_ids();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL Area::mutable_subarea_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.map.Area.subarea_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_subarea_ids();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
Area::_internal_subarea_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subarea_ids_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
Area::_internal_mutable_subarea_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.subarea_ids_;
}

// optional .tibia.protobuf.shared.Coordinate label_coordinate = 5;
inline bool Area::has_label_coordinate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.label_coordinate_ != nullptr);
  return value;
}
inline const ::tibia::protobuf::shared::Coordinate& Area::_internal_label_coordinate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tibia::protobuf::shared::Coordinate* p = _impl_.label_coordinate_;
  return p != nullptr ? *p : reinterpret_cast<const ::tibia::protobuf::shared::Coordinate&>(::tibia::protobuf::shared::_Coordinate_default_instance_);
}
inline const ::tibia::protobuf::shared::Coordinate& Area::label_coordinate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Area.label_coordinate)
  return _internal_label_coordinate();
}
inline void Area::unsafe_arena_set_allocated_label_coordinate(
    ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.label_coordinate_);
  }
  _impl_.label_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tibia.protobuf.map.Area.label_coordinate)
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE Area::release_label_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tibia::protobuf::shared::Coordinate* released = _impl_.label_coordinate_;
  _impl_.label_coordinate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE Area::unsafe_arena_release_label_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tibia.protobuf.map.Area.label_coordinate)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tibia::protobuf::shared::Coordinate* temp = _impl_.label_coordinate_;
  _impl_.label_coordinate_ = nullptr;
  return temp;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL Area::_internal_mutable_label_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.label_coordinate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tibia::protobuf::shared::Coordinate>(GetArena());
    _impl_.label_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(p);
  }
  return _impl_.label_coordinate_;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL Area::mutable_label_coordinate()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::tibia::protobuf::shared::Coordinate* _msg = _internal_mutable_label_coordinate();
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.Area.label_coordinate)
  return _msg;
}
inline void Area::set_allocated_label_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.label_coordinate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.label_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.map.Area.label_coordinate)
}

// optional bool reject_donations = 6;
inline bool Area::has_reject_donations() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Area::clear_reject_donations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reject_donations_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool Area::reject_donations() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Area.reject_donations)
  return _internal_reject_donations();
}
inline void Area::set_reject_donations(bool value) {
  _internal_set_reject_donations(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.Area.reject_donations)
}
inline bool Area::_internal_reject_donations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reject_donations_;
}
inline void Area::_internal_set_reject_donations(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reject_donations_ = value;
}

// optional string alias = 7;
inline bool Area::has_alias() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Area::clear_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Area::alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Area.alias)
  return _internal_alias();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Area::set_alias(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.Area.alias)
}
inline ::std::string* PROTOBUF_NONNULL Area::mutable_alias()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_alias();
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.Area.alias)
  return _s;
}
inline const ::std::string& Area::_internal_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alias_.Get();
}
inline void Area::_internal_set_alias(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.alias_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Area::_internal_mutable_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.alias_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Area::release_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tibia.protobuf.map.Area.alias)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.alias_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.alias_.Set("", GetArena());
  }
  return released;
}
inline void Area::set_allocated_alias(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.alias_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.alias_.IsDefault()) {
    _impl_.alias_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.map.Area.alias)
}

// -------------------------------------------------------------------

// Npc

// optional string name = 1;
inline bool Npc::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Npc::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Npc::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Npc.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Npc::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.Npc.name)
}
inline ::std::string* PROTOBUF_NONNULL Npc::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.Npc.name)
  return _s;
}
inline const ::std::string& Npc::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Npc::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Npc::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Npc::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tibia.protobuf.map.Npc.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Npc::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.map.Npc.name)
}

// optional .tibia.protobuf.shared.Coordinate tile_coordinate = 2;
inline bool Npc::has_tile_coordinate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tile_coordinate_ != nullptr);
  return value;
}
inline const ::tibia::protobuf::shared::Coordinate& Npc::_internal_tile_coordinate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tibia::protobuf::shared::Coordinate* p = _impl_.tile_coordinate_;
  return p != nullptr ? *p : reinterpret_cast<const ::tibia::protobuf::shared::Coordinate&>(::tibia::protobuf::shared::_Coordinate_default_instance_);
}
inline const ::tibia::protobuf::shared::Coordinate& Npc::tile_coordinate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Npc.tile_coordinate)
  return _internal_tile_coordinate();
}
inline void Npc::unsafe_arena_set_allocated_tile_coordinate(
    ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tile_coordinate_);
  }
  _impl_.tile_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tibia.protobuf.map.Npc.tile_coordinate)
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE Npc::release_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tibia::protobuf::shared::Coordinate* released = _impl_.tile_coordinate_;
  _impl_.tile_coordinate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE Npc::unsafe_arena_release_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tibia.protobuf.map.Npc.tile_coordinate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tibia::protobuf::shared::Coordinate* temp = _impl_.tile_coordinate_;
  _impl_.tile_coordinate_ = nullptr;
  return temp;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL Npc::_internal_mutable_tile_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tile_coordinate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tibia::protobuf::shared::Coordinate>(GetArena());
    _impl_.tile_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(p);
  }
  return _impl_.tile_coordinate_;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL Npc::mutable_tile_coordinate()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tibia::protobuf::shared::Coordinate* _msg = _internal_mutable_tile_coordinate();
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.Npc.tile_coordinate)
  return _msg;
}
inline void Npc::set_allocated_tile_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tile_coordinate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.tile_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.map.Npc.tile_coordinate)
}

// optional uint32 subarea_id = 3;
inline bool Npc::has_subarea_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Npc::clear_subarea_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subarea_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Npc::subarea_id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.Npc.subarea_id)
  return _internal_subarea_id();
}
inline void Npc::set_subarea_id(::uint32_t value) {
  _internal_set_subarea_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.Npc.subarea_id)
}
inline ::uint32_t Npc::_internal_subarea_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subarea_id_;
}
inline void Npc::_internal_set_subarea_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subarea_id_ = value;
}

// -------------------------------------------------------------------

// MapFile

// optional .tibia.protobuf.map.MAP_FILE_TYPE file_type = 1;
inline bool MapFile::has_file_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MapFile::clear_file_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::tibia::protobuf::map::MAP_FILE_TYPE MapFile::file_type() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.MapFile.file_type)
  return _internal_file_type();
}
inline void MapFile::set_file_type(::tibia::protobuf::map::MAP_FILE_TYPE value) {
  _internal_set_file_type(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.MapFile.file_type)
}
inline ::tibia::protobuf::map::MAP_FILE_TYPE MapFile::_internal_file_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tibia::protobuf::map::MAP_FILE_TYPE>(_impl_.file_type_);
}
inline void MapFile::_internal_set_file_type(::tibia::protobuf::map::MAP_FILE_TYPE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::tibia::protobuf::map::MAP_FILE_TYPE_internal_data_));
                                          _impl_.file_type_ = value;
}

// optional .tibia.protobuf.shared.Coordinate top_left_coordinate = 2;
inline bool MapFile::has_top_left_coordinate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.top_left_coordinate_ != nullptr);
  return value;
}
inline const ::tibia::protobuf::shared::Coordinate& MapFile::_internal_top_left_coordinate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tibia::protobuf::shared::Coordinate* p = _impl_.top_left_coordinate_;
  return p != nullptr ? *p : reinterpret_cast<const ::tibia::protobuf::shared::Coordinate&>(::tibia::protobuf::shared::_Coordinate_default_instance_);
}
inline const ::tibia::protobuf::shared::Coordinate& MapFile::top_left_coordinate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.MapFile.top_left_coordinate)
  return _internal_top_left_coordinate();
}
inline void MapFile::unsafe_arena_set_allocated_top_left_coordinate(
    ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.top_left_coordinate_);
  }
  _impl_.top_left_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tibia.protobuf.map.MapFile.top_left_coordinate)
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE MapFile::release_top_left_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tibia::protobuf::shared::Coordinate* released = _impl_.top_left_coordinate_;
  _impl_.top_left_coordinate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE MapFile::unsafe_arena_release_top_left_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tibia.protobuf.map.MapFile.top_left_coordinate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tibia::protobuf::shared::Coordinate* temp = _impl_.top_left_coordinate_;
  _impl_.top_left_coordinate_ = nullptr;
  return temp;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL MapFile::_internal_mutable_top_left_coordinate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.top_left_coordinate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tibia::protobuf::shared::Coordinate>(GetArena());
    _impl_.top_left_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(p);
  }
  return _impl_.top_left_coordinate_;
}
inline ::tibia::protobuf::shared::Coordinate* PROTOBUF_NONNULL MapFile::mutable_top_left_coordinate()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tibia::protobuf::shared::Coordinate* _msg = _internal_mutable_top_left_coordinate();
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.MapFile.top_left_coordinate)
  return _msg;
}
inline void MapFile::set_allocated_top_left_coordinate(::tibia::protobuf::shared::Coordinate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.top_left_coordinate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.top_left_coordinate_ = reinterpret_cast<::tibia::protobuf::shared::Coordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.map.MapFile.top_left_coordinate)
}

// optional string file_name = 3;
inline bool MapFile::has_file_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MapFile::clear_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MapFile::file_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.MapFile.file_name)
  return _internal_file_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MapFile::set_file_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.MapFile.file_name)
}
inline ::std::string* PROTOBUF_NONNULL MapFile::mutable_file_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_file_name();
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.map.MapFile.file_name)
  return _s;
}
inline const ::std::string& MapFile::_internal_file_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_name_.Get();
}
inline void MapFile::_internal_set_file_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MapFile::_internal_mutable_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.file_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MapFile::release_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tibia.protobuf.map.MapFile.file_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.file_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.file_name_.Set("", GetArena());
  }
  return released;
}
inline void MapFile::set_allocated_file_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.file_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_name_.IsDefault()) {
    _impl_.file_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.map.MapFile.file_name)
}

// optional uint32 fields_width = 4;
inline bool MapFile::has_fields_width() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MapFile::clear_fields_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fields_width_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t MapFile::fields_width() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.MapFile.fields_width)
  return _internal_fields_width();
}
inline void MapFile::set_fields_width(::uint32_t value) {
  _internal_set_fields_width(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.MapFile.fields_width)
}
inline ::uint32_t MapFile::_internal_fields_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fields_width_;
}
inline void MapFile::_internal_set_fields_width(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fields_width_ = value;
}

// optional uint32 fields_height = 5;
inline bool MapFile::has_fields_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MapFile::clear_fields_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fields_height_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t MapFile::fields_height() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.MapFile.fields_height)
  return _internal_fields_height();
}
inline void MapFile::set_fields_height(::uint32_t value) {
  _internal_set_fields_height(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.MapFile.fields_height)
}
inline ::uint32_t MapFile::_internal_fields_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fields_height_;
}
inline void MapFile::_internal_set_fields_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fields_height_ = value;
}

// optional uint32 area_id = 6;
inline bool MapFile::has_area_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void MapFile::clear_area_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.area_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t MapFile::area_id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.MapFile.area_id)
  return _internal_area_id();
}
inline void MapFile::set_area_id(::uint32_t value) {
  _internal_set_area_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.MapFile.area_id)
}
inline ::uint32_t MapFile::_internal_area_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.area_id_;
}
inline void MapFile::_internal_set_area_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.area_id_ = value;
}

// optional double scale_factor = 7;
inline bool MapFile::has_scale_factor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void MapFile::clear_scale_factor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scale_factor_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double MapFile::scale_factor() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.map.MapFile.scale_factor)
  return _internal_scale_factor();
}
inline void MapFile::set_scale_factor(double value) {
  _internal_set_scale_factor(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:tibia.protobuf.map.MapFile.scale_factor)
}
inline double MapFile::_internal_scale_factor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scale_factor_;
}
inline void MapFile::_internal_set_scale_factor(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scale_factor_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace map
}  // namespace protobuf
}  // namespace tibia


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tibia::protobuf::map::MAP_FILE_TYPE> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::tibia::protobuf::map::MAP_FILE_TYPE>() {
  return ::tibia::protobuf::map::MAP_FILE_TYPE_descriptor();
}
template <>
struct is_proto_enum<::tibia::protobuf::map::AREA_TYPE> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::tibia::protobuf::map::AREA_TYPE>() {
  return ::tibia::protobuf::map::AREA_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // map_2eproto_2epb_2eh
